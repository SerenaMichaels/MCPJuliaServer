{
  "mcpServers": {
    "mcp-postgres-http": {
      "command": "powershell",
      "args": [
        "-Command",
        "$response = Invoke-RestMethod -Uri 'http://WSL_IP_ADDRESS:8080/mcp/tools/call' -Method POST -ContentType 'application/json' -Body (ConvertTo-Json @{name=$args[0]; arguments=(ConvertFrom-Json $args[1])}); Write-Output ($response.result.content[0].text)"
      ],
      "env": {},
      "description": "PostgreSQL MCP Server via HTTP from WSL - Execute SQL queries and database operations"
    },
    "mcp-file-http": {
      "command": "powershell", 
      "args": [
        "-Command",
        "$response = Invoke-RestMethod -Uri 'http://WSL_IP_ADDRESS:8081/mcp/tools/call' -Method POST -ContentType 'application/json' -Body (ConvertTo-Json @{name=$args[0]; arguments=(ConvertFrom-Json $args[1])}); Write-Output ($response.result.content[0].text)"
      ],
      "env": {},
      "description": "File Operations MCP Server via HTTP from WSL - Read, write, and manage files"
    },
    "mcp-db-admin-http": {
      "command": "powershell",
      "args": [
        "-Command", 
        "$response = Invoke-RestMethod -Uri 'http://WSL_IP_ADDRESS:8082/mcp/tools/call' -Method POST -ContentType 'application/json' -Body (ConvertTo-Json @{name=$args[0]; arguments=(ConvertFrom-Json $args[1])}); Write-Output ($response.result.content[0].text)"
      ],
      "env": {},
      "description": "Database Administration MCP Server via HTTP from WSL - Create databases, manage users"
    },
    "mcp-julia-orchestrator-http": {
      "command": "powershell",
      "args": [
        "-Command",
        "$response = Invoke-RestMethod -Uri 'http://WSL_IP_ADDRESS:8083/mcp/orchestrator' -Method POST -ContentType 'application/json' -Body (ConvertTo-Json @{workflow=$args[0]; parameters=(ConvertFrom-Json $args[1])}); Write-Output ($response.result)"
      ],
      "env": {},
      "description": "High-level MCP Orchestrator via HTTP - Execute multi-server workflows and complex operations"
    }
  }
}